name: Actividad04 - PackageNuGet

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test-analyze-package:
    runs-on: ubuntu-latest
    env:
      DOTNET_VERSION: '8.0.x'
      PROJECT_PATH: './Bank/Bank.WebApi/Bank.WebApi.csproj'
      PACKAGE_OUTPUT_DIR: './output'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore ${{ env.PROJECT_PATH }}

    - name: Build solution
      run: dotnet build ${{ env.PROJECT_PATH }} --no-restore --configuration Release

    - name: Run tests with coverage
      run: dotnet test ${{ env.PROJECT_PATH }} --no-build --configuration Release --collect:"Code Coverage" --results-directory ./TestResults --logger "trx"

    - name: Report coverage
      uses: danielpalme/ReportGenerator-GitHub-Action@5.2.4
      with:
        reports: './TestResults/**/coverage.opencover.xml'
        targetdir: 'coveragereport'
        reporttypes: 'HtmlInline_AzurePipelines'

    - name: Upload coverage report artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coveragereport

    - name: Setup Java (for SonarScanner)
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: SonarCloud Scan
      uses: SonarSource/sonarqube-scan-action@v5.0.0
      with:
        args: >
          -Dsonar.projectKey=lab01calidadsoftware_lab03calidadsoftware
          -Dsonar.organization=lab01calidadsoftware
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.cs.opencover.reportsPaths=**/coverage.opencover.xml
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Pack NuGet
      run: dotnet pack ${{ env.PROJECT_PATH }} --configuration Release --output ${{ env.PACKAGE_OUTPUT_DIR }}

    - name: Publish NuGet package to GitHub Packages
      run: dotnet nuget push ${{ env.PACKAGE_OUTPUT_DIR }}/*.nupkg --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" --api-key ${{ secrets.NUGET_API_KEY }}
